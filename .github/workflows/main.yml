name: Main Workflow
on:
  push:
  pull_request:
jobs:
  all:
    name: Build, Test, Deploy, Tag
    runs-on: ubuntu-18.04

    steps:
      - uses: rlespinasse/github-slug-action@master

      - name: Set up dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.401'

      - name: Check out code
        uses: actions/checkout@v1

      - name: Build and test
        run: |
          dotnet build -c Release TwoMQTT
          dotnet test --collect:"XPlat Code Coverage" TwoMQTTTest
          bash <(curl -s https://codecov.io/bash)

      - name: Package (Master)
        run: dotnet pack -c Release -o output TwoMQTT
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'

      - name: Package (Non-Master)
        run: dotnet pack -c Debug -o output --version-suffix="${{ env.GITHUB_REF_SLUG }}" TwoMQTT
        if: github.event_name == 'push' && github.ref != 'refs/heads/master'

      - name: Set PACKAGE_FILE
        run: echo "::set-env name=PACKAGE_FILE::$(ls output)"
        if: github.event_name == 'push'

      - name: Set BUILD_VERSION
        env:
          PACKAGE_FILE: ${{ env.PACKAGE_FILE }}
          PACKAGE: "TwoMQTT"
          EXTENSION: ".nupkg"
        run: |
          VERSION_EXTENSION=${PACKAGE_FILE/$PACKAGE./}
          VERSION=${VERSION_EXTENSION/$EXTENSION/}
          echo "::set-env name=BUILD_VERSION::${VERSION}"
        if: github.event_name == 'push'

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.PACKAGE_FILE }}
          path: output/${{ env.PACKAGE_FILE }}
        if: github.event_name == 'push'

      - name: Upload to NuGet
        run: dotnet nuget push output/${{ env.PACKAGE_FILE }} -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json
        if: github.event_name == 'push'

      - name: Unilst from NuGet
        env:
          PACKAGE: "TwoMQTT"
          BUILD_VERSION: ${{ env.BUILD_VERSION }}
        run: |
          dotnet nuget delete ${PACKAGE} ${BUILD_VERSION} --non-interactive -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json
        if: github.event_name == 'push'

      - name: Tag and push the git release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_VERSION: ${{ env.BUILD_VERSION }}
        run: |
          git tag -f v${BUILD_VERSION}
          sed -i -e "s/github.com/mannkind:${GITHUB_TOKEN}@github.com/g" .git/config
          git push --tags
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
